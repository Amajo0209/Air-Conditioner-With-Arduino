/*
   autor: JOSEPH DREAM
   2022/01/24
   
   desc: this code is for controlling the air conditioner with a button using Arduino nano.

*/
#include <IRLibSendBase.h>    //We need the base code
#include <IRLib_HashRaw.h>    //Only use raw sender

IRsendRaw mySender;

int pinBtn = 2;
int acState = 0;
int btnNewState;
int btnOldState = 1;

void setup() {
  pinMode(13, OUTPUT);
  pinMode(pinBtn, INPUT);
  Serial.begin(9600);
  delay(2000);

}

// Use your Air conditioner code to replace the ones below
#define RAW_DATA_LEN 244
uint16_t rawDataOn[RAW_DATA_LEN] = {
  8394, 4190, 534, 558, 538, 1630, 538, 1630,
  538, 554, 542, 1630, 538, 554, 538, 1630,
  538, 554, 542, 554, 538, 554, 538, 1630,
  538, 1630, 542, 1626, 542, 1630, 538, 1630,
  538, 554, 538, 554, 538, 558, 538, 550,
  542, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 542, 550,
  542, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 538, 558, 538, 554, 538, 554,
  538, 554, 538, 1630, 538, 554, 538, 554,
  538, 554, 542, 550, 542, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  542, 550, 538, 558, 538, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 542, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  542, 550, 542, 554, 538, 554, 538, 554,
  538, 554, 542, 550, 542, 550, 542, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 542, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 542, 554, 538, 554, 538, 554,
  542, 550, 538, 554, 542, 550, 542, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 542, 550, 542, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  542, 550, 542, 550, 542, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  542, 554, 534, 1634, 538, 1630, 538, 1630,
  538, 1630, 538, 1630, 542, 554, 538, 554,
  538, 554, 538, 1000
};


#define RAW_DATA_LEN 244
uint16_t rawDataOff[RAW_DATA_LEN] = {
  8390, 4186, 538, 558, 534, 1634, 534, 1634,
  534, 558, 538, 1634, 534, 558, 534, 1634,
  534, 558, 534, 558, 534, 558, 534, 1634,
  538, 1634, 534, 1634, 534, 1634, 534, 1634,
  538, 554, 534, 558, 538, 558, 534, 558,
  534, 554, 538, 558, 534, 558, 534, 558,
  538, 554, 534, 558, 534, 558, 534, 558,
  538, 554, 538, 554, 538, 558, 534, 558,
  538, 554, 534, 558, 534, 558, 534, 558,
  534, 558, 538, 1634, 538, 554, 534, 558,
  538, 554, 538, 554, 534, 558, 534, 562,
  534, 554, 542, 554, 534, 558, 538, 1630,
  538, 1630, 542, 550, 538, 554, 542, 550,
  542, 550, 542, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 542, 550, 542, 550,
  542, 550, 542, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 558, 534, 554, 542, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 538, 554, 542, 550,
  542, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 542, 550, 538, 554, 538, 554,
  538, 554, 538, 554, 542, 550, 542, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  542, 550, 538, 554, 542, 550, 542, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 538, 554, 542, 550, 542, 554,
  538, 554, 538, 554, 538, 554, 538, 554,
  538, 554, 538, 1630, 542, 1626, 542, 554,
  538, 1630, 538, 554, 538, 1630, 538, 554,
  542, 550, 542, 1000
};

void loop() {
  btnNewState = digitalRead(pinBtn);

  if (btnOldState == 0 && btnNewState == 1) {

    if (acState == 0) {
      digitalWrite(13, HIGH);
      mySender.send(rawDataOn, RAW_DATA_LEN, 36); //Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On"));
      acState = 1;
    }
    else {
      digitalWrite(13, LOW);
      mySender.send(rawDataOff, RAW_DATA_LEN, 36); //Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched Off"));
      acState = 0;
    }
  }

  btnOldState = btnNewState;
  delay(100);

}
