/*
 * autor: JOSEPH DREAM
 * 2020/01/17
 * website: https://josephdream.tech/
 *   
 */
#include <IRLibSendBase.h>    //We need the base code
#include <IRLib_HashRaw.h>    //Only use raw sender

IRsendRaw mySender;

void setup() {
  Serial.begin(9600);
  delay(2000); 
}

#define RAW_DATA_LEN 244
uint16_t rawDataOn[RAW_DATA_LEN] = {
  8426, 4222, 534, 566, 538, 1618, 534, 1646,
  534, 546, 506, 1670, 538, 566, 538, 1614,
  538, 566, 506, 570, 538, 566, 534, 1618,
  538, 1642, 538, 1618, 538, 1642, 538, 1646,
  534, 542, 538, 566, 534, 542, 538, 542,
  558, 546, 534, 542, 534, 570, 534, 542,
  534, 570, 534, 546, 530, 570, 506, 570,
  534, 570, 506, 570, 534, 570, 502, 574,
  530, 574, 534, 1618, 538, 566, 502, 574,
  534, 570, 534, 1618, 538, 566, 506, 570,
  530, 570, 502, 574, 530, 570, 534, 542,
  534, 546, 506, 594, 530, 546, 530, 570,
  530, 546, 530, 574, 530, 1626, 530, 570,
  534, 542, 530, 570, 534, 546, 530, 1650,
  534, 542, 534, 570, 530, 546, 534, 570,
  530, 546, 530, 570, 506, 570, 534, 570,
  502, 574, 530, 574, 534, 538, 534, 570,
  534, 542, 534, 546, 506, 598, 530, 546,
  530, 570, 530, 546, 534, 570, 530, 546,
  530, 570, 506, 570, 530, 574, 502, 574,
  530, 570, 534, 542, 534, 570, 534, 546,
  530, 546, 530, 570, 530, 550, 530, 570,
  530, 546, 534, 570, 530, 546, 534, 570,
  506, 570, 534, 570, 506, 570, 530, 570,
  534, 542, 530, 574, 530, 546, 530, 546,
  506, 594, 534, 546, 530, 570, 530, 546,
  530, 570, 534, 546, 530, 570, 506, 570,
  534, 566, 506, 570, 530, 570, 534, 542,
  534, 566, 530, 546, 526, 1650, 530, 1618,
  534, 566, 506, 570, 530, 1646, 502, 570,
  534, 570, 502, 1000
};


#define RAW_DATA_LEN 244
uint16_t rawDataOff[RAW_DATA_LEN] = {
  8422, 4190, 534, 570, 534, 1618, 534, 1646,
  534, 542, 558, 1622, 538, 566, 534, 1618,
  538, 566, 506, 570, 538, 562, 534, 1622,
  534, 1642, 538, 1618, 534, 1642, 534, 1646,
  534, 542, 534, 566, 534, 542, 538, 542,
  554, 542, 538, 542, 530, 566, 538, 542,
  534, 566, 534, 542, 534, 566, 534, 542,
  538, 566, 534, 542, 538, 566, 534, 542,
  538, 570, 530, 1622, 534, 566, 538, 542,
  538, 566, 534, 1622, 534, 566, 534, 542,
  538, 566, 534, 546, 534, 566, 534, 542,
  538, 542, 558, 542, 538, 542, 534, 1642,
  538, 1646, 534, 542, 534, 570, 538, 538,
  534, 546, 554, 546, 534, 542, 534, 566,
  538, 542, 534, 566, 538, 538, 538, 566,
  534, 542, 534, 566, 506, 570, 538, 566,
  534, 542, 534, 570, 534, 542, 534, 546,
  558, 542, 534, 542, 538, 566, 534, 542,
  534, 566, 538, 542, 534, 570, 534, 542,
  534, 566, 534, 542, 534, 566, 534, 542,
  534, 570, 534, 542, 538, 542, 554, 546,
  534, 542, 534, 570, 534, 542, 534, 566,
  534, 542, 534, 566, 506, 570, 534, 566,
  506, 570, 534, 570, 534, 542, 534, 566,
  534, 542, 534, 546, 554, 546, 534, 542,
  534, 566, 534, 542, 534, 566, 538, 538,
  534, 566, 538, 542, 534, 566, 506, 570,
  534, 570, 534, 542, 538, 566, 530, 546,
  530, 546, 558, 542, 534, 542, 534, 1646,
  534, 1642, 534, 542, 534, 1646, 530, 546,
  534, 566, 534, 1000
};
  
void loop() {
  if (Serial.available()){
    char command = Serial.read();
    if (command == 'a') {
      mySender.send(rawDataOn,RAW_DATA_LEN,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched On"));
    }
    else if (command = 'b') {
      mySender.send(rawDataOff,RAW_DATA_LEN,36);//Pass the buffer,length, optionally frequency
      Serial.println(F("AC Switched Off"));
    }
    delay(5000);
  }
  

}
